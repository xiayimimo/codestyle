package com.tycho.codestyle.one;

/**
 * 代码格式
 * 
 * @author ll
 *
 */
public class ThreeCodeStyle {

	/*
	 * 1. 【强制】如果是大括号内为空，则简洁地写成{}即可，大括号中间无需换行和空格；如果是非 空代码块则： 1） 左大括号前不换行。 2）
	 * 左大括号后换行。 3） 右大括号前换行。 4） 右大括号后还有 else 等代码则不换行；表示终止的右大括号后必须换行。
	 */
	/*
	 * 2. 【强制】左小括号和字符之间不出现空格；同样，右小括号和字符之间也不出现空格；而左 大括号前需要空格。详见第 5 条下方正例提示。 反例：if
	 * (空格 a == b 空格)
	 */
	/* 3. 【强制】if/for/while/switch/do 等保留字与括号之间都必须加空格。 */
	/*
	 * 4. 【强制】任何二目、三目运算符的左右两边都需要加一个空格。 说明：运算符包括赋值运算符=、逻辑运算符&&、加减乘除符号等
	 */
	/*
	 * 5. 【强制】采用 4 个空格缩进，禁止使用 tab 字符。 说明：如果使用 tab 缩进，必须设置 1 个 tab 为 4 个空格。IDEA
	 * 设置 tab 为 4 个空格时，请勿勾选 Use tab character；而在 eclipse 中，必须勾选 insert spaces
	 * for tabs。 正例： （涉及 1-5 点） public static void main(String[] args) { // 缩进 4
	 * 个空格 String say = "hello"; // 运算符的左右必须有一个空格 int flag = 0; // 关键词 if
	 * 与括号之间必须有一个空格，括号内的 f 与左括号，0 与右括号不需要空格 if (flag == 0) {
	 * System.out.println(say); } // 左大括号前加空格且不换行；左大括号后换行 if (flag == 1) {
	 * System.out.println("world"); // 右大括号前换行，右大括号后有 else，不用换行 } else {
	 * System.out.println("ok"); // 在右大括号后直接结束，则必须换行 } }
	 */
	/*
	 * 6. 【强制】注释的双斜线与注释内容之间有且仅有一个空格。 正例： // 这是示例注释，请注意在双斜线之后有一个空格 String param =
	 * new String();
	 */
	/*
	 * 7. 【强制】在进行类型强制转换时，右括号与强制转换值之间不需要任何空格隔开。 正例： long first = 1000000000000L;
	 * int second = (int)first + 2;
	 */
	/*
	 * 8. 【强制】单行字符数限制不超过 120 个，超出需要换行，换行时遵循如下原则： 1）第二行相对第一行缩进 4
	 * 个空格，从第三行开始，不再继续缩进，参考示例。 2）运算符与下文一起换行。 3）方法调用的点符号与下文一起换行。
	 * 4）方法调用中的多个参数需要换行时，在逗号后进行。 5）在括号前不要换行，见反例。 正例： StringBuilder sb = new
	 * StringBuilder(); // 超过 120 个字符的情况下，换行缩进 4 个空格，点号和方法名称一起换行
	 * sb.append("Jack").append("Ma")... .append("alibaba")...
	 * .append("alibaba")... .append("alibaba"); 反例： StringBuilder sb = new
	 * StringBuilder(); // 超过 120 个字符的情况下，不要在括号前换行
	 * sb.append("Jack").append("Ma")...append ("alibaba"); // 参数很多的方法调用可能超过 120
	 * 个字符，不要在逗号前换行 method(args1, args2, args3, ... , argsX);
	 */
	/*
	 * 9. 【强制】方法参数在定义和传入时，多个参数逗号后边必须加空格。 正例：下例中实参的 args1，后边必须要有一个空格。
	 * method(args1, args2, args3);
	 */
	/*
	 * 10.【强制】IDE 的 text file encoding 设置为 UTF-8; IDE 中文件的换行符使用 Unix 格式，不 要使用
	 * Windows 格式。
	 */
	/*
	 * 11.【推荐】单个方法的总行数不超过 80 行。 说明：除注释之外的方法签名、左右大括号、方法内代码、空行、回车及任何不可见字符的总行数不超过
	 * 80 行。 正例：代码逻辑分清红花和绿叶，个性和共性，绿叶逻辑单独出来成为额外方法，使主干代码更加清晰；
	 * 共性逻辑抽取成为共性方法，便于复用和维护。
	 */
	/*
	 * 12.【推荐】没有必要增加若干空格来使变量的赋值等号与上一行对应位置的等号对齐。 正例： int one = 1; long two = 2L;
	 * float three = 3F; StringBuilder sb = new StringBuilder(); 说明：增加 sb
	 * 这个变量，如果需要对齐，则给 one、two、three 都要增加几个空格，在变量比较多的情 况下，是非常累赘的事情
	 */
	/*
	 * 13.【推荐】不同逻辑、不同语义、不同业务的代码之间插入一个空行分隔开来以提升可读性。 说明：任何情形，没有必要插入多个空行进行隔开。
	 */

}
